apply plugin: 'com.android.application'
apply plugin: 'channel'

def PAKEAGENAME = "com.example.rjw.channel"
def DEBUG_VERSION_NAME = "1.0.0"
def RELEASE_VERSION_NAME = "1.0.0"

android {
    compileSdkVersion 28
    defaultConfig {
        flavorDimensions "1"
        applicationId "com.example.rjw.channel"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            keyAlias 'debug'
            keyPassword '123456'
            storeFile file('D:/sobu/Channel/debug.jks')
            storePassword '123456'
        }
        release {
            keyAlias 'release'
            keyPassword '123456'
            storeFile file('D:/sobu/Channel/release.jks')
            storePassword '123456'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }

        release {
            signingConfig signingConfigs.release
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }


    }

    /**
     * 配置多版本的apk
     productFlavors 定义了一个应用的自定义构建版本
     一个单一的项目可以同时定义多个不同的 flavor 来改变应用的输出。
     productFlavors 这个概念是为了解决不同的版本之间的差异非常小的情况，通常用于区分同一个应用的不同渠道/客户等，可包含少量业务功能差别。
     productFlavors 中的 flavor 不能跟 buildType 中的一样,否则会报: "ProductFlavor names cannot collide with BuildType names"
     * 配置不同的环境包
     * 测试包
     * 正式包
     */

    productFlavors {
        develop {
            applicationId = PAKEAGENAME
            versionName DEBUG_VERSION_NAME
            buildConfigField "boolean", "IS_PRODUCT_ENV", "false"
            manifestPlaceholders = [
                    PACKAGE_NAME: applicationId,
                    APP_NAME    : "Channel测试版",
                    APP_ICON    : "@drawable/ic_launcher_yuntest"
            ]

        }
        preRelease {

            applicationId = PAKEAGENAME
            versionName DEBUG_VERSION_NAME
            buildConfigField "boolean", "IS_PRODUCT_ENV", "true"
            manifestPlaceholders = [
                    PACKAGE_NAME: applicationId,
                    APP_NAME    : "Channel",
                    APP_ICON    : "@drawable/ic_launcher_dogfood"
            ]

        }

    }


    channel {
        //指定渠道文件
        channelFile = new File(project.rootDir, "Channel.txt")
        //多渠道包的输出目录，默认为new File(project.buildDir,"channel")
        baseOutputDir = new File(project.buildDir, "channel")
        //多渠道包的命名规则，默认为：${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}
        apkNameFormat = '${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}'
        //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）
        isFastMode = false
        //buildTime的时间格式，默认格式：yyyyMMdd-HHmmss
        buildTimeDateFormat = 'yyyyMMdd-HH:mm:ss'
        //低内存模式（仅针对V2签名，默认为false）：只把签名块、中央目录和EOCD读取到内存，不把最大头的内容块读取到内存，在手机上合成APK时，可以使用该模式
        lowMemory = false
    }
    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation 'com.android.support:appcompat-v7:28.0.0'
        implementation 'com.android.support.constraint:constraint-layout:1.1.3'
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'com.android.support.test:runner:1.0.2'
        androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
        api 'com.leon.channel:helper:2.0.1'
    }
}

